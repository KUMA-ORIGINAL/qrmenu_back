import requests
import logging
from django.conf import settings
from telegram import InlineKeyboardButton, InlineKeyboardMarkup

logger = logging.getLogger(__name__)


def send_telegram_message(chat_id, text, buttons=None, parse_mode="Markdown") -> bool:
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
    """
    url = f"https://api.telegram.org/bot{settings.TG_BOT_TOKEN}/sendMessage"

    payload = {
        "chat_id": chat_id,
        "text": text,
        "parse_mode": parse_mode,
    }

    if buttons:
        payload["reply_markup"] = InlineKeyboardMarkup(buttons).to_dict()

    try:
        response = requests.post(url, json=payload, timeout=10)
        data = response.json()
        if response.status_code == 200 and data.get("ok"):
            logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {chat_id}")
            return True
        else:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ —á–∞—Ç {chat_id}: {response.text}")
            return False
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ Telegram-—Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return False


def send_order_notification(chat_id, message, order_id):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
    buttons = [
        [
            InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"accept_{order_id}"),
            InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{order_id}")
        ]
    ]
    return send_telegram_message(chat_id, message, buttons)


def notify_waiter(table):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ñ–∏—Ü–∏–∞–Ω—Ç—É"""
    spot = getattr(table, "spot", None)
    if not spot or not spot.telegram_chat_id:
        logger.warning(f"–£ —Å—Ç–æ–ª–∞ {table.id} –Ω–µ—Ç chat_id –∏–ª–∏ Spot")
        return False

    text = (
        f"üì¢ *–í—ã–∑–æ–≤ –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–∞!*\n\n"
        f"üè† –¢–æ—á–∫–∞: *{spot.name}*\n"
        f"üçΩ –°—Ç–æ–ª: *{table.table_num}*\n"
        f"üìç –ê–¥—Ä–µ—Å: {spot.address or '-'}"
    )

    # –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É "‚úÖ –ü—Ä–∏–Ω—è—Ç—å" –ø—Ä—è–º–æ –∑–¥–µ—Å—å
    # buttons = [
    #     [InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å –≤—ã–∑–æ–≤", callback_data=f"waiter_accept_{table.id}")]
    # ]

    return send_telegram_message(spot.telegram_chat_id, text)
