version: '3.9'

services:
  application:
    build: app
    env_file:
      - .env.dev
    restart: unless-stopped
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app:/app
    ports:
      - '8000:8000'
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres:16.2-alpine3.18
    env_file: .env.dev
    restart: unless-stopped
    ports:
      - '5555:5432'
    volumes:
      - database-storage:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}' ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

volumes:
  database-storage:
